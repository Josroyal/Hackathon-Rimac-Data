{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNq8tMNVq5LqlPNClmuzqPm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"tBPQWWJZDhaQ","executionInfo":{"status":"ok","timestamp":1719090900926,"user_tz":300,"elapsed":2546,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import drive\n","import os\n","\n"]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DaoqOJ_jDpc4","executionInfo":{"status":"ok","timestamp":1719090902983,"user_tz":300,"elapsed":2060,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}},"outputId":"55104d60-ef94-4bed-e53a-fe6f4f88281f"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["file_names = [\n","    'ConsultaB2_2023_I_v1_0.csv',\n","    'ConsultaB2_2023_II_v1.csv',\n","    'ConsultaB2_2023_05_v1.csv',\n","    'ConsultaB2_2023_06_v1.csv',\n","    'ConsultaB2_2023_07_v1.csv',\n","    'ConsultaB2_2023_08_v1.csv',\n","    'ConsultaB2_2023_09_v1.csv',\n","    'ConsultaB2_2023_10_v1.csv',\n","    'ConsultaB2_2023_11_v1.csv',\n","    'ConsultaB2_2023_12_v1.csv',\n","    'ConsultaB2_2024_01_v1.csv',\n","    'ConsultaB2_2024_02_v1.csv',\n","    'ConsultaB2_2024_03_v2.csv',\n","    'ConsultaB2_2024_04_v1.csv'\n","]\n","\n","directory = '/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/'\n"],"metadata":{"id":"Yh6HaNbEDuCE","executionInfo":{"status":"ok","timestamp":1719089730396,"user_tz":300,"elapsed":6,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Initialize an empty list to store DataFrames\n","data_frames = []\n","\n","# Function to log problematic rows\n","def log_problematic_rows(file_path, encoding, delimiter):\n","    problematic_rows = []\n","    with open(file_path, encoding=encoding) as f:\n","        for i, line in enumerate(f):\n","            if len(line.split(delimiter)) != expected_num_fields:\n","                problematic_rows.append((i + 1, line))\n","    return problematic_rows\n","\n","# Loop through the filenames, read each file and append the DataFrame to the list\n","for file_name in file_names:\n","    file_path = os.path.join(directory, file_name)\n","    print(f\"Reading file: {file_path}\")\n","\n","    # First, determine the expected number of fields\n","    with open(file_path, encoding='latin-1') as f:\n","        expected_num_fields = len(f.readline().split(';'))\n","\n","    # Log problematic rows\n","    problems = log_problematic_rows(file_path, encoding='latin-1', delimiter=';')\n","    if problems:\n","        print(f\"Found problems in file {file_name}:\")\n","        for row_number, row_content in problems:\n","            print(f\"Problem in row {row_number}: {row_content.strip()}\")\n","\n","    try:\n","        df = pd.read_csv(file_path, encoding='latin-1', delimiter=';', on_bad_lines='skip')\n","        data_frames.append(df)\n","    except Exception as e:\n","        print(f\"Error reading file {file_name}: {e}\")\n","\n","# Concatenate all DataFrames into a single DataFrame\n","combined_df = pd.concat(data_frames, ignore_index=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":818},"id":"q0JKstoSKUDb","executionInfo":{"status":"error","timestamp":1719080173469,"user_tz":300,"elapsed":28285,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}},"outputId":"eee794a3-88ab-441b-9e9e-784786b30fe4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading file: /content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_I_v1_0.csv\n","Found problems in file ConsultaB2_2023_I_v1_0.csv:\n","Problem in row 1145: \"2023\";\"02\";\"06\"02\";\"150116\";\"LIMA\";\"LIMA\";\"LINCE\";\"ESSALUD\";\"I-3\";\"00017695\";\"CENTRO DE ATENCION PRIMARIA III ALFREDO PIAZZA ROBERTS-GSPN I Y II-RPA-ESSALUD\";\"2\";\"15\";\"M79.2\";\"7\"\n","Problem in row 1743: \"2023\";\"01\";\"220205\";\"SAN MARTI0101\";\"CAJAMARCA\";\"CAJAMARCA\";\"CAJAMARCA\";\"GOBIERNO REGIONAL\";\"I-3\";\"00004657\";\"PACHACUTEC\";\"2\";\"6\";\"O23.4\";\"4\"\n","Problem in row 2818: \"2023\";\"01\";\"220205\";\"SAN MARTIN\";\"BELLAVISTA\";\"SAN PABLO\";\"GOBIERNO REGIONAL\";\"IN\";\"BELLAVISTA\";\"SAN PABLO\";\"GOBIERNO REGIONAL\";\"I-2\";\"00006499\";\"FAUSA LAMISTA\";\"2\";\"13\";\"M54.9\";\"1\"\n","Problem in row 3423: \"2023\";\"02\";\"150111\";\"LIMA\";\"LIMA\";\"E-1\";\"00006508\";\"SAN PABLO\";\"1\";\"4\";\"J03.9\";\"1\"\n","Problem in row 5065: \"2023\";\"02\";\"150136\";\"LIMA\";\"LIMA\";\"SAN MIGUEL\";\"PRIVADO\";\"II-2\";\"00011401\";\"CLINICA SAN JUEL\";\"PRIVADO\";\"II-2\";\"00011401\";\"CLINICA SAN JUDAS TADEO\";\"1\";\"14\";\"K29.5\";\"3\"\n","Problem in row 6127: \"2023\";\"02\";\"150101\";\"LIMA\";\"LIMA\";\"LIMA\";\"ESSALUD\"UDAS TADEO\";\"2\";\"6\";\"F32.1\";\"1\"\n","Problem in row 6762: \"2023\";\"01\";\"040702\";\"AREQUIPA\";\"ISLAY\";\"COCACHAC;\"I-3\";\"00008539\";\"POLICLINICO CHINCHA\";\"2\";\"2\";\"K04.1\";\"2\"\n","Problem in row 7925: \"2023\";\"01\";\"030201\";\"APURIMAC\";\"RA\";\"GOBIERNO REGIONAL\";\"I-2\";\"00001452\";\"PUESTO DE SALUD EL FISCAL\";\"1\";\"15\";\"J00.X\";\"1\"\n","Problem in row 8552: \"2023\";\"02\";\"150101\";ANDAHUAYLAS\";\"ANDAHUAYLAS\";\"ESSALUD\";\"II-1\";\"00011214\";\"HOSPITAL I SANTA MARGARITA\";\"2\";\"10\";\"M17.0\";\"2\"\n","Problem in row 9664: \"2023\";\"02\";\"150113\";\"LIMA\";\"LIMA\";\"JESUS MARIA\";\"SANIDAD DEL EJERCITO DEL PERU\";\"III-1\";\"00\"LIMA\";\"LIMA\";\"LIMA\";\"ESSALUD\";\"I-3\";\"00008539\";\"POLICLINICO CHINCHA\";\"1\";\"2\";\"K13.6\";\"9\"\n","Problem in row 10326: \"2023\";\"02\";\"150136\";\"LIMA\";\"LIMA\";\"SAN MIGUEL\";\"PRIVADO\";\"II-2\";\"00011401\";\"CLINICA SAN JUDAS TADEO\";\"2\"017024\";\"HOSPITAL  MILITAR LUIS ARIAS SCHEREIBER\";\"2\";\"11\";\"M54.2\";\"1\"\n","Problem in row 11377: \"2023\";\"01\";\"060301\";\"CAJAMARCA\";\"CELENDIN\";\"CELENDIN\";\"ESSALUD\";\"I-3\";\"00010269\";\"CENTRO MEDICO ESSALUD CELENDIN\";\"1\";\"13\";\"K;\"15\";\"B35.1\";\"20\"\n","Problem in row 12020: \"2023\";\"01\";\"040704\";\"AREQUIPA\";\"ISLAY\";\"ISLAY\";\"GOBIERNO REGIONAL\";\"I-3\";\"00001443\";04.6\";\"1\"\n","Problem in row 13079: \"2023\";\"02\";\"021801\";\"ANCASH\";\"SANTA\";\"C\"CENTRO DE SALUD MATARANI\";\"2\";\"9\";\"E63.1\";\"2\"\n","Problem in row 13681: \"2023\";\"02\";\"150113\";\"LIMA\";\"LIMA\";\"JESUS MARIA\";\"SANIDAD DEL EJERCITO DEL PERU\";\"III-1\";\"0001702HIMBOTE\";\"ESSALUD\";\"I-3\";\"00010013\";\"POLICLÍNICO DE COMPLEJIDAD CRECIENTE \"\"VICTOR PANTA RODRIGUEZ\"\"\";\"2\";\"13\";\"Z54.0\";\"3\"\n","Problem in row 15425: \"2023\";\"02\";\"220802\";\"SAN MARTIN\";\"RIOJA\";\"AWAJUN\";\"GOBIERNO REGIONAL\";\"I-1\";\"00009075\";\"NUEVA SANTA 695\";\"CENTRO DE ATENCION PRIMARIA III ALFREDO PIAZZA ROBERTS-GSPN I Y II-RPA-ESSALUD\";\"2\";\"15\";\"H81.4\";\"2\"\n","Problem in row 15520: \"2023\";CRUZ\";\"1\";\"7\";\"B36.9\";\"1\"\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-18-b2e7f13ca3c6>:30: DtypeWarning: Columns (1,8,10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path, encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["Reading file: /content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_II_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-18-b2e7f13ca3c6>:30: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path, encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-18-b2e7f13ca3c6>\u001b[0m in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m         \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'latin-1'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelimiter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m';'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mon_bad_lines\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'skip'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m         \u001b[0mdata_frames\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m    910\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 912\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    581\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    582\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 583\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    584\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    585\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   1719\u001b[0m                 \u001b[0mnew_rows\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1720\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1721\u001b[0;31m             \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1722\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1723\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_currow\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mnew_rows\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    707\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    708\u001b[0m             \u001b[0;31m# GH#38939 de facto copy defaults to False only in non-dict cases\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 709\u001b[0;31m             \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdict_to_mgr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtyp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmanager\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    710\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMaskedArray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    711\u001b[0m             \u001b[0;32mfrom\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mma\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmrecords\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36mdict_to_mgr\u001b[0;34m(data, index, columns, dtype, typ, copy)\u001b[0m\n\u001b[1;32m    479\u001b[0m             \u001b[0marrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    480\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 481\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0marrays_to_mgr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtyp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtyp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    482\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    483\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36marrays_to_mgr\u001b[0;34m(arrays, columns, index, dtype, verify_integrity, typ, consolidate)\u001b[0m\n\u001b[1;32m    151\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtyp\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"block\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 153\u001b[0;31m         return create_block_manager_from_column_arrays(\n\u001b[0m\u001b[1;32m    154\u001b[0m             \u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconsolidate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrefs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrefs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mcreate_block_manager_from_column_arrays\u001b[0;34m(arrays, axes, consolidate, refs)\u001b[0m\n\u001b[1;32m   2140\u001b[0m         \u001b[0mraise_construction_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2141\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mconsolidate\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2142\u001b[0;31m         \u001b[0mmgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_consolidate_inplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2143\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mmgr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2144\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_consolidate_inplace\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1827\u001b[0m         \u001b[0;31m#  BlockManager objects not yet attached to a DataFrame.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1828\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_consolidated\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1829\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mblocks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_consolidate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1830\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_consolidated\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1831\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_known_consolidated\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_consolidate\u001b[0;34m(blocks)\u001b[0m\n\u001b[1;32m   2270\u001b[0m     \u001b[0mnew_blocks\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mBlock\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2271\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0m_can_consolidate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroup_blocks\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mgrouper\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2272\u001b[0;31m         merged_blocks, _ = _merge_blocks(\n\u001b[0m\u001b[1;32m   2273\u001b[0m             \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgroup_blocks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcan_consolidate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_can_consolidate\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2274\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_merge_blocks\u001b[0;34m(blocks, dtype, can_consolidate)\u001b[0m\n\u001b[1;32m   2305\u001b[0m         \u001b[0mnew_mgr_locs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_mgr_locs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0margsort\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2306\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2307\u001b[0;31m         \u001b[0mbp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBlockPlacement\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_mgr_locs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2308\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mnew_block_2d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplacement\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2309\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["# Initialize an empty list to store DataFrames\n","data_frames = []\n","\n","# Loop through the filenames, read each file and append the DataFrame to the list\n","for file_name in file_names:\n","    file_path = os.path.join(directory, file_name)\n","    print(file_path)\n","    df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n","    data_frames.append(df)\n","\n","# Concatenate all DataFrames into a single DataFrame\n","combined_df = pd.concat(data_frames, ignore_index=True)\n","combined_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hMzFGb9QEMJ-","executionInfo":{"status":"ok","timestamp":1719089815839,"user_tz":300,"elapsed":85447,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}},"outputId":"48ede9b9-f96f-433b-84d4-3033e5d302fd"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_I_v1_0.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (1,8,10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_II_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_05_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_06_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_07_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_08_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_09_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_10_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_11_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2023_12_v1.csv\n","/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2024_01_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2024_02_v1.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2024_03_v2.csv\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-6-91a8030bb0dc>:8: DtypeWarning: Columns (10,11,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path,encoding='latin-1', delimiter=';', on_bad_lines='skip')\n"]},{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Rimac Hackathon/data/Ambulatorio/ConsultaB2_2024_04_v1.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["          ANHO MES  UBIGEO DEPARTAMENTO              PROVINCIA  DISTRITO  \\\n","0         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","1         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","2         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","3         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","4         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","...        ...  ..     ...          ...                    ...       ...   \n","26088748  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088749  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088750  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088751  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088752  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","\n","           SECTOR CATEGORIA CO_IPRESS              RAZON_SOC SEXO EDAD  \\\n","0         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","1         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","2         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","3         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","4         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","...           ...       ...       ...                    ...  ...  ...   \n","26088748  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088749  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088750  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088751  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088752  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","\n","         DIAGNOSTICO NU_TOTAL_ATENDIDOS  \n","0              E88.2                  1  \n","1              G44.2                  1  \n","2              H11.0                  1  \n","3              H40.5                  1  \n","4              I10.X                 10  \n","...              ...                ...  \n","26088748       K29.7                  1  \n","26088749       S93.4                  1  \n","26088750       Z01.2                  1  \n","26088751       Z01.3                  1  \n","26088752       Z12.3                  1  \n","\n","[26088753 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-165ec80c-b68f-4978-b3e7-56951fc6b68c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ANHO</th>\n","      <th>MES</th>\n","      <th>UBIGEO</th>\n","      <th>DEPARTAMENTO</th>\n","      <th>PROVINCIA</th>\n","      <th>DISTRITO</th>\n","      <th>SECTOR</th>\n","      <th>CATEGORIA</th>\n","      <th>CO_IPRESS</th>\n","      <th>RAZON_SOC</th>\n","      <th>SEXO</th>\n","      <th>EDAD</th>\n","      <th>DIAGNOSTICO</th>\n","      <th>NU_TOTAL_ATENDIDOS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>E88.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>G44.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>H11.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>H40.5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>I10.X</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>26088748</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>K29.7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088749</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>S93.4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088750</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z01.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088751</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z01.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088752</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z12.3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26088753 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-165ec80c-b68f-4978-b3e7-56951fc6b68c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-165ec80c-b68f-4978-b3e7-56951fc6b68c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-165ec80c-b68f-4978-b3e7-56951fc6b68c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-28de020e-a2ad-43e9-ba6a-498024e519e4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28de020e-a2ad-43e9-ba6a-498024e519e4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-28de020e-a2ad-43e9-ba6a-498024e519e4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e139ab55-1eff-4fc5-8907-5c86e685c9ab\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('combined_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e139ab55-1eff-4fc5-8907-5c86e685c9ab button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('combined_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_df"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["\n","save_directory = '/content/drive/My Drive/Rimac Hackathon/data/Data Limpia Josue/'\n","\n","os.makedirs(save_directory, exist_ok=True)\n","\n","# Save the DataFrames to CSV files\n","combined_df.to_csv(os.path.join(save_directory, 'df_ambulatorio_nasty.csv'), index=False)"],"metadata":{"id":"BATQVYfqvJnL","executionInfo":{"status":"ok","timestamp":1719090003175,"user_tz":300,"elapsed":147051,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# sum of nan\n","rows_with_nan = combined_df.isna().any(axis=1).sum()\n","rows_with_nan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7ZBC4HfRJQJZ","executionInfo":{"status":"ok","timestamp":1719089242432,"user_tz":300,"elapsed":20906,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}},"outputId":"0a57dd4d-8ae5-4e86-efe0-520c55dae2f8"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["prueba = combined_df.dropna(axis=0, how='any')\n","prueba"],"metadata":{"id":"mZgNEDvHNLvp","executionInfo":{"status":"ok","timestamp":1719090818895,"user_tz":300,"elapsed":29139,"user":{"displayName":"Josué Arbulú Pastor","userId":"04973568037788770706"}},"colab":{"base_uri":"https://localhost:8080/","height":790},"outputId":"0d9b7cb1-3823-4e93-b475-d8d07c0eb3f5"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ANHO MES  UBIGEO DEPARTAMENTO              PROVINCIA  DISTRITO  \\\n","0         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","1         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","2         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","3         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","4         2023  02  240201       TUMBES  CONTRALMIRANTE VILLAR  ZORRITOS   \n","...        ...  ..     ...          ...                    ...       ...   \n","26088748  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088749  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088750  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088751  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","26088752  2024   4  180201     MOQUEGUA  GENERAL SANCHEZ CERRO     OMATE   \n","\n","           SECTOR CATEGORIA CO_IPRESS              RAZON_SOC SEXO EDAD  \\\n","0         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","1         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","2         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","3         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","4         ESSALUD       I-2  00012273  POSTA MEDICA ZORRITOS    2   14   \n","...           ...       ...       ...                    ...  ...  ...   \n","26088748  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088749  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088750  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088751  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","26088752  ESSALUD       I-2     26055     POSTA MEDICA OMATE    2   10   \n","\n","         DIAGNOSTICO NU_TOTAL_ATENDIDOS  \n","0              E88.2                  1  \n","1              G44.2                  1  \n","2              H11.0                  1  \n","3              H40.5                  1  \n","4              I10.X                 10  \n","...              ...                ...  \n","26088748       K29.7                  1  \n","26088749       S93.4                  1  \n","26088750       Z01.2                  1  \n","26088751       Z01.3                  1  \n","26088752       Z12.3                  1  \n","\n","[26088745 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-4b96e168-67e2-4947-b876-e316d75b8f4e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ANHO</th>\n","      <th>MES</th>\n","      <th>UBIGEO</th>\n","      <th>DEPARTAMENTO</th>\n","      <th>PROVINCIA</th>\n","      <th>DISTRITO</th>\n","      <th>SECTOR</th>\n","      <th>CATEGORIA</th>\n","      <th>CO_IPRESS</th>\n","      <th>RAZON_SOC</th>\n","      <th>SEXO</th>\n","      <th>EDAD</th>\n","      <th>DIAGNOSTICO</th>\n","      <th>NU_TOTAL_ATENDIDOS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>E88.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>G44.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>H11.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>H40.5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023</td>\n","      <td>02</td>\n","      <td>240201</td>\n","      <td>TUMBES</td>\n","      <td>CONTRALMIRANTE VILLAR</td>\n","      <td>ZORRITOS</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>00012273</td>\n","      <td>POSTA MEDICA ZORRITOS</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>I10.X</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>26088748</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>K29.7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088749</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>S93.4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088750</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z01.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088751</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z01.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26088752</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>180201</td>\n","      <td>MOQUEGUA</td>\n","      <td>GENERAL SANCHEZ CERRO</td>\n","      <td>OMATE</td>\n","      <td>ESSALUD</td>\n","      <td>I-2</td>\n","      <td>26055</td>\n","      <td>POSTA MEDICA OMATE</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>Z12.3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26088745 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b96e168-67e2-4947-b876-e316d75b8f4e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b96e168-67e2-4947-b876-e316d75b8f4e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b96e168-67e2-4947-b876-e316d75b8f4e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e3751d90-85fb-422f-bdc8-a740c8811e47\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3751d90-85fb-422f-bdc8-a740c8811e47')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e3751d90-85fb-422f-bdc8-a740c8811e47 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5ecf90a5-02fb-44f8-ad9d-642b1eb10ca1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('prueba')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5ecf90a5-02fb-44f8-ad9d-642b1eb10ca1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('prueba');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"prueba"}},"metadata":{},"execution_count":8}]}]}